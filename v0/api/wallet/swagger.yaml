swagger: '2.0'
info:
  version: 0.0.1
  title: RBKmoney Wallet API
  description: |

    RBKmoney Wallet API является базовой и единственной точкой взаимодействия с платформой кошельков. Все изменения состояний платформы осуществляются с помощью вызовов соответствующих методов API. Любые сторонние приложения, включая наши веб-сайты и другие UI-интерфейсы являются внешними приложениями-клиентами.
    RBKmoney API работает поверх HTTP-протокола. Мы используем REST архитектуру, схема описывается в соответствии со [Swagger](http://swagger.io/). Коды возврата описываются соответствующими HTTP-статусами. Платформа принимает и возвращает значения JSON в теле запросов и ответов.
    ## Формат содержимого
    Любой запрос к API должен выполняться в кодировке UTF-8 и с указанием содержимого в формате JSON.
    ```
      Content-Type: application/json; charset=utf-8
    ```
    ## Формат дат
    Платформа принимает значения date-time в стандарте RFC 3339 с обязательным указанием UTC-оффсета, например:
    ```
      2017-01-01T00:00:00Z
      2017-01-01T00:00:01+00:00
    ```
    ## Максимальное время обработки запроса
    К любому вызову методов API можно добавить параметр отсечки по времени, определяющий максимальное время ожидания завершения операции по запросу. Данная отсечка передается в соответствующем заголовке HTTP-запроса:
    ```
     X-Request-Deadline: 10s
    ```
    Значение отсечки может быть задано в формате ISO 8601 (см. [Формат дат](#section/Format-dat)), либо в относительных величинах, например:
    `150000ms`, `540s`, `3.5m` При этом возможные единицы измерения `ms`, `s`, `m`. В обоих случаях  не рекомендуется, чтобы задаваемое значение было меньше **3 секунд** и превышало **1 минуту**.
    ## Ошибки обработки запросов
    В процессе обработки запросов силами нашей платформы могут происходить различные непредвиденные ситуации. Об их появлении платформа сигнализирует по протоколу HTTP соответствующими [статусами][5xx], обозначающими ошибки сервера.

     |  Код    |  Описание  |
     | ------- | ---------- |
     | **500** | В процессе обработки платформой запроса возникла непредвиденная ситуация. При получении подобного кода ответа мы рекомендуем обратиться в техническую поддержку. |
     | **503** | Платформа временно недоступна и не готова обслуживать данный запрос. Запрос гарантированно не выполнен, при получении подобного кода ответа попробуйте выполнить его позднее, когда доступность платформы будет восстановлена. |
     | **504** | Платформа превысила допустимое время обработки запроса, результат запроса не определён. Попробуйте отправить запрос повторно или выяснить результат выполнения исходного запроса, если повторное исполнение запроса нежелательно. |

    [5xx]: https://tools.ietf.org/html/rfc7231#section-6.6
  termsOfService: 'http://rbk.money/'
  contact:
    name: RBKmoney support team
    email: support@rbk.money
    url: 'https://rbk.money'
host: api.rbk.money
basePath: /wallet/v0
schemes:
  - https
consumes:
  - application/json; charset=utf-8
produces:
  - application/json; charset=utf-8
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      Для аутентификации вызовов мы используем [JWT](https://jwt.io). Cоответствующий ключ передается в заголовке.
      ```shell
       Authorization: Bearer {TOKENIZATION|PRIVATE_JWT}
      ```
security:
  - bearer: []
responses:
  BadRequest:
    description: Недопустимые для операции входные данные
    schema:
      $ref: '#/definitions/BadRequest'
  ConflictRequest:
    description: Конфликт входных данных операции
    schema:
      $ref: '#/definitions/ConflictRequest'
  NotFound:
    description: Искомая сущность не найдена
  Unauthorized:
    description: Ошибка авторизации
parameters:
  requestID:
    name: X-Request-ID
    in: header
    description: Уникальный идентификатор запроса к системе
    required: true
    type: string
    maxLength: 32
    minLength: 1
  providerID:
    name: providerID
    in: path
    description: Идентификатор провайдера
    required: true
    type: string
    maxLength: 40
    minLength: 1
  identityID:
    name: identityID
    in: path
    description: Идентификатор личности владельца
    required: true
    type: string
    maxLength: 40
    minLength: 1
  challengeID:
    name: challengeID
    in: path
    description: Идентификатор процедуры идентификации личности
    required: true
    type: string
    maxLength: 40
    minLength: 1
  walletID:
    name: walletID
    in: path
    description: Идентификатор кошелька
    required: true
    type: string
    maxLength: 40
    minLength: 1
  destinationID:
    name: destinationID
    in: path
    description: Идентификатор приёмника средств
    required: true
    type: string
    maxLength: 40
    minLength: 1
  withdrawalID:
    name: withdrawalID
    in: path
    description: Идентификатор вывода денежных средств
    required: true
    type: string
    maxLength: 40
    minLength: 1
  residence:
    name: residence
    in: query
    description: |
      Резиденция, в рамках которой производится оказание услуг,
      код страны или региона по стандарту [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1)
    type: string
    pattern: '^[A-Za-z]{3}$'
    required: false
  amountFrom:
    name: amountFrom
    in: query
    description: Сумма денежных средств в минорных единицах
    type: integer
    format: int64
    required: false
  amountTo:
    name: amountTo
    in: query
    description: Сумма денежных средств в минорных единицах
    type: integer
    format: int64
    required: false
  currencyID:
    name: currencyID
    in: query
    description: |
      Валюта, символьный код согласно [ISO
      4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
    type: string
    pattern: '^[A-Z]{3}$'
  limit:
    name: limit
    in: query
    description: Лимит выборки
    required: true
    type: integer
    format: int32
    minimum: 1
    maximum: 1000
  eventCursor:
    name: eventCursor
    in: query
    description: |
      Идентификатор последнего известного события.

      Все события, произошедшие _после_ указанного, попадут в выборку.
      Если этот параметр не указан, в выборку попадут события, начиная с самого первого.
    required: false
    type: integer
    format: int32
  eventID:
    name: eventID
    in: path
    description: |
      Идентификатор события процедуры идентификации.
    required: true
    type: integer
    format: int32
  reportID:
    name: reportID
    in: path
    description: Идентификатор отчета
    required: true
    type: integer
    format: int64
  fileID:
    name: fileID
    in: path
    description: Идентификатор файла
    required: true
    type: string
    maxLength: 40
    minLength: 1
  fromTime:
    name: fromTime
    in: query
    description: Начало временного отрезка
    required: true
    type: string
    format: date-time
  toTime:
    name: toTime
    in: query
    description: Конец временного отрезка
    required: true
    type: string
    format: date-time
  deadline:
    name: X-Request-Deadline
    in: header
    description: Максимальное время обработки запроса
    required: false
    type: string
    maxLength: 40
    minLength: 1
tags:
  - name: Providers
    x-displayName: Провайдеры услуг
    description: ''
  - name: Identities
    x-displayName: Владельцы
    description: ''
  - name: Wallets
    x-displayName: Кошельки
    description: ''
  - name: Deposits
    x-displayName: Пополнения
    description: ''
  - name: Withdrawals
    x-displayName: Выводы
    description: ''
  - name: Residences
    x-displayName: Резиденции
    description: ''
  - name: Currencies
    x-displayName: Валюты
    description: ''
  - name: Reports
    x-displayName: Отчеты
    description: ''
  - name: Downloads
    x-displayName: Загрузка файлов
    description: ''
paths:
  '/currencies/{currencyID}':
    get:
      operationId: getCurrency
      summary: Получить описание валюты
      tags:
        - Currencies
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - name: currencyID
          in: path
          description: |
            Валюта, символьный код согласно [ISO
            4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
          type: string
          required: true
          pattern: '^[A-Za-z]{3}$'
      responses:
        '200':
          description: Валюта найдена
          schema:
            $ref: '#/definitions/Currency'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  /deposits:
    get:
      operationId: listDeposits
      summary: Поиск пополнений
      tags:
        - Deposits
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - name: walletID
          in: query
          description: Идентификатор кошелька
          type: string
          maxLength: 40
          minLength: 1
          required: false
        - name: identityID
          in: query
          description: Идентификатор личности владельца
          type: string
          maxLength: 40
          minLength: 1
          required: false
        - name: depositID
          in: query
          description: Идентификатор ввода денежных средств
          type: string
          required: false
          maxLength: 50
          minLength: 1
        - name: sourceID
          in: query
          description: Идентификатор источника средств
          type: string
          maxLength: 40
          minLength: 1
          required: false
        - name: status
          in: query
          type: string
          enum:
            - Pending
            - Succeeded
            - Failed
          required: false
        - name: createdAtFrom
          in: query
          description: Дата создания с
          type: string
          format: date-time
          required: false
        - name: createdAtTo
          in: query
          description: Дата создания до
          type: string
          format: date-time
          required: false
        - $ref: '#/parameters/amountFrom'
        - $ref: '#/parameters/amountTo'
        - $ref: '#/parameters/currencyID'
        - $ref: '#/parameters/limit'
        - name: continuationToken
          in: query
          required: false
          description: |
            Токен, сигнализирующий о том, что в ответе передана только часть данных.
            Для получения следующей части нужно повторно обратиться к сервису, указав тот же набор условий и полученый токен.
            Если токена нет, получена последняя часть данных.
          type: string
      responses:
        '200':
          description: Результат поиска
          schema:
            type: object
            properties:
              continuationToken:
                description: |
                  Токен, сигнализирующий о том, что в ответе передана только часть данных.
                  Для получения следующей части нужно повторно обратиться к сервису, указав тот же набор условий и полученый токен.
                  Если токена нет, получена последняя часть данных.
                type: string
              result:
                description: Найденные пополнения
                type: array
                items:
                  $ref: '#/definitions/Deposit'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
  /destinations:
    get:
      operationId: listDestinations
      summary: Перечислить приёмники средств
      tags:
        - Withdrawals
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - name: identity
          description: Фильтр по личности владельца
          in: query
          required: false
          type: string
          maxLength: 40
          minLength: 1
        - name: currency
          description: |
            Фильтр по валюте приёмника средств,
            символьный код согласно [ISO 4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
          in: query
          required: false
          type: string
          pattern: '^[A-Z]{3}$'
      responses:
        '200':
          description: Приёмники средств найдены
          schema:
            type: array
            items:
              $ref: '#/definitions/Destination'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
    post:
      operationId: createDestination
      summary: Завести приёмник средств
      tags:
        - Withdrawals
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - name: destination
          description: Данные приёмника средств
          in: body
          required: true
          schema:
            $ref: '#/definitions/Destination'
      responses:
        '201':
          description: Приёмник средств создан
          headers:
            Location:
              description: URI созданного приёмника средств
              type: string
              format: uri
          schema:
            $ref: '#/definitions/Destination'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '409':
          $ref: '#/responses/ConflictRequest'
        '422':
          description: Неверные данные приёмника средств
          schema:
            $ref: '#/definitions/InvalidOperationParameters'
  '/destinations/{destinationID}':
    get:
      operationId: getDestination
      summary: Получить приёмник средств
      tags:
        - Withdrawals
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/destinationID'
      responses:
        '200':
          description: Приёмник средств найден
          schema:
            $ref: '#/definitions/Destination'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/destinations/{destinationID}/grants':
    post:
      operationId: issueDestinationGrant
      summary: Выдать право управления приёмником средств
      tags:
        - Withdrawals
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/destinationID'
        - name: request
          description: Запрос на право управления приёмником средств
          in: body
          required: true
          schema:
            $ref: '#/definitions/DestinationGrantRequest'
      responses:
        '201':
          description: Право выдано
          schema:
            $ref: '#/definitions/DestinationGrantRequest'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Неверные данные для выдачи
          schema:
            $ref: '#/definitions/InvalidOperationParameters'
  '/files/{fileID}/download':
    post:
      description: Получить ссылку для скачивания файла
      tags:
        - Downloads
      operationId: downloadFile
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/fileID'
      responses:
        '201':
          description: Данные для получения файла
          schema:
            $ref: '#/definitions/FileDownload'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  /identities:
    get:
      operationId: listIdentities
      summary: Перечислить личности владельцев
      tags:
        - Identities
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - name: provider
          description: Фильтр по провайдеру услуг
          in: query
          required: false
          type: string
          maxLength: 40
          minLength: 1
        - name: class
          description: Фильтр по классу личности
          in: query
          required: false
          type: string
          maxLength: 40
          minLength: 1
        - name: level
          description: Фильтр по уровню идентификации
          in: query
          required: false
          type: string
          maxLength: 40
          minLength: 1
      responses:
        '201':
          description: Личности владельцев найдены
          schema:
            type: array
            items:
              $ref: '#/definitions/Identity'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
    post:
      operationId: createIdentity
      summary: Создать личность владельца
      tags:
        - Identities
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - name: identity
          description: Данные создаваемой личности
          in: body
          required: true
          schema:
            $ref: '#/definitions/Identity'
      responses:
        '201':
          description: Личность владельца создана
          headers:
            Location:
              description: URI созданной личности
              type: string
              format: uri
          schema:
            $ref: '#/definitions/Identity'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '409':
          $ref: '#/responses/ConflictRequest'
        '422':
          description: Неверные данные личности владельца
          schema:
            $ref: '#/definitions/InvalidOperationParameters'
  '/identities/{identityID}':
    get:
      operationId: getIdentity
      summary: Получить данные личности владельца
      tags:
        - Identities
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/identityID'
      responses:
        '200':
          description: Личность владельца найдена
          schema:
            $ref: '#/definitions/Identity'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/identities/{identityID}/challenges':
    get:
      operationId: listIdentityChallenges
      summary: Перечислить процедуры идентификации
      tags:
        - Identities
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/identityID'
        - name: status
          description: |
            Статус процедуры идентификации личности.

            | Значение    | Пояснение                       |
            | ----------- | ------------------------------- |
            | `Pending`   | Процедура в процессе выполнения |
            | `Completed` | Процедура пройдена успешно      |
            | `Failed`    | Процедура не пройдена           |
            | `Cancelled` | Процедура отменена              |
          in: query
          required: false
          type: string
          enum:
            - Pending
            - Completed
            - Failed
            - Cancelled
      responses:
        '200':
          description: Процедуры идентификации найдены
          schema:
            type: array
            items:
              $ref: '#/definitions/IdentityChallenge'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
    post:
      operationId: startIdentityChallenge
      summary: Запустить процедуру идентификации
      tags:
        - Identities
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/identityID'
        - name: challenge
          description: Данные для запуска процедуры идентификации
          in: body
          required: true
          schema:
            $ref: '#/definitions/IdentityChallenge'
      responses:
        '202':
          description: Процедура идентификации запущена
          headers:
            Location:
              description: URI запущенной процедуры
              type: string
              format: uri
          schema:
            $ref: '#/definitions/IdentityChallenge'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          description: Ранее запущенная процедура ещё не завершена
        '422':
          description: Неверные данные для проведения процедуры
          schema:
            $ref: '#/definitions/InvalidOperationParameters'
  '/identities/{identityID}/challenges/{challengeID}':
    get:
      operationId: getIdentityChallenge
      summary: Получить данные процедуры идентификации
      tags:
        - Identities
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/identityID'
        - $ref: '#/parameters/challengeID'
      responses:
        '200':
          description: Процедура идентификации найдена
          schema:
            $ref: '#/definitions/IdentityChallenge'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/identities/{identityID}/challenges/{challengeID}/events':
    get:
      operationId: pollIdentityChallengeEvents
      summary: Запросить события процедуры идентификации
      tags:
        - Identities
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/identityID'
        - $ref: '#/parameters/challengeID'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/eventCursor'
      responses:
        '200':
          description: События найдены
          schema:
            type: array
            items:
              $ref: '#/definitions/IdentityChallengeEvent'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/identities/{identityID}/challenges/{challengeID}/events/{eventID}':
    get:
      operationId: getIdentityChallengeEvent
      summary: Получить событие процедуры идентификации
      tags:
        - Identities
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/identityID'
        - $ref: '#/parameters/challengeID'
        - $ref: '#/parameters/eventID'
      responses:
        '200':
          description: Событие найдено
          schema:
            $ref: '#/definitions/IdentityChallengeEvent'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/identities/{identityID}/reports':
    post:
      description: Сгенерировать отчет с указанным типом по личности владельца за указанный промежуток времени
      tags:
        - Reports
      operationId: createReport
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/identityID'
        - name: ReportParams
          in: body
          description: Параметры генерации отчета
          required: true
          schema:
            $ref: '#/definitions/ReportParams'
      responses:
        '201':
          description: Отчет создан
          schema:
            $ref: '#/definitions/Report'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
    get:
      description: Получить список отчетов по личности владельца за период
      tags:
        - Reports
      operationId: getReports
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/identityID'
        - $ref: '#/parameters/fromTime'
        - $ref: '#/parameters/toTime'
        - name: type
          in: query
          description: Тип получаемых отчетов
          required: false
          type: string
          enum:
            - withdrawalRegistry
      responses:
        '200':
          description: Найденные отчеты
          schema:
            type: array
            items:
              $ref: '#/definitions/Report'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
  '/identities/{identityID}/reports/{reportID}':
    get:
      description: Получить отчет по данному идентификатору
      tags:
        - Reports
      operationId: getReport
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/identityID'
        - $ref: '#/parameters/reportID'
      responses:
        '200':
          description: Найденный отчет
          schema:
            $ref: '#/definitions/Report'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  /providers:
    get:
      operationId: listProviders
      summary: Перечислить доступных провайдеров
      tags:
        - Providers
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/residence'
      responses:
        '200':
          description: Провайдеры найдены
          schema:
            type: array
            items:
              $ref: '#/definitions/Provider'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
  '/providers/{providerID}':
    get:
      operationId: getProvider
      summary: Получить данные провайдера
      tags:
        - Providers
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/providerID'
      responses:
        '200':
          description: Провайдер найден
          schema:
            $ref: '#/definitions/Provider'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/providers/{providerID}/identity-classes':
    get:
      operationId: listProviderIdentityClasses
      summary: Перечислить классы личностей
      tags:
        - Providers
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/providerID'
      responses:
        '200':
          description: Классы личностей найдены
          schema:
            type: array
            items:
              $ref: '#/definitions/IdentityClass'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/providers/{providerID}/identity-classes/{identityClassID}':
    get:
      operationId: getProviderIdentityClass
      summary: Получить описание класса личностей
      tags:
        - Providers
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/providerID'
        - name: identityClassID
          description: Класс личности владельца
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Класс личностей найден
          schema:
            $ref: '#/definitions/IdentityClass'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/providers/{providerID}/identity-classes/{identityClassID}/levels':
    get:
      operationId: listProviderIdentityLevels
      summary: Перечислить уровни идентификации личности
      tags:
        - Providers
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/providerID'
        - name: identityClassID
          description: Класс личности владельца
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Уровни идентификации найдены
          schema:
            type: array
            items:
              $ref: '#/definitions/IdentityLevel'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/providers/{providerID}/identity-classes/{identityClassID}/levels/{identityLevelID}':
    get:
      operationId: getProviderIdentityLevel
      summary: Получить описание уровня идентификации
      tags:
        - Providers
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/providerID'
        - name: identityClassID
          description: Класс личности владельца
          in: path
          required: true
          type: string
        - name: identityLevelID
          description: Уровень идентификации
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Уровень идентификации найден
          schema:
            $ref: '#/definitions/IdentityLevel'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/residences/{residence}':
    get:
      operationId: getResidence
      summary: Получить описание региона резиденции
      tags:
        - Residences
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - name: residence
          in: path
          description: |
            Резиденция, в рамках которой производится оказание услуг,
            код страны или региона по стандарту [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1)
          type: string
          pattern: '^[A-Za-z]{3}$'
          required: true
      responses:
        '200':
          description: Регион резиденции найден
          schema:
            $ref: '#/definitions/Residence'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  /wallets:
    get:
      operationId: listWallets
      summary: Перечислить кошельки
      tags:
        - Wallets
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - name: identityID
          description: Идентификатор личности владельца
          in: query
          required: false
          type: string
          maxLength: 40
          minLength: 1
        - $ref: '#/parameters/currencyID'
        - $ref: '#/parameters/limit'
        - name: continuationToken
          in: query
          required: false
          description: |
            Токен, сигнализирующий о том, что в ответе передана только часть данных.
            Для получения следующей части нужно повторно обратиться к сервису, указав тот же набор условий и полученый токен.
            Если токена нет, получена последняя часть данных.
          type: string
      responses:
        '200':
          description: Результат поиска
          schema:
            type: object
            properties:
              continuationToken:
                description: |
                  Токен, сигнализирующий о том, что в ответе передана только часть данных.
                  Для получения следующей части нужно повторно обратиться к сервису, указав тот же набор условий и полученый токен.
                  Если токена нет, получена последняя часть данных.
                type: string
              result:
                description: Найденные кошельки
                type: array
                items:
                  $ref: '#/definitions/Wallet'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
    post:
      operationId: createWallet
      summary: Завести новый кошелёк
      tags:
        - Wallets
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - name: wallet
          description: Данные создаваемого кошелька
          in: body
          required: true
          schema:
            $ref: '#/definitions/Wallet'
      responses:
        '201':
          description: Кошелёк создан
          headers:
            Location:
              description: URI созданного кошелька
              type: string
              format: uri
          schema:
            $ref: '#/definitions/Wallet'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '409':
          $ref: '#/responses/ConflictRequest'
        '422':
          description: Неверные данные кошелька
          schema:
            $ref: '#/definitions/InvalidOperationParameters'
  '/wallets/{walletID}':
    get:
      operationId: getWallet
      summary: Получить данные кошелька
      tags:
        - Wallets
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/walletID'
      responses:
        '200':
          description: Кошелёк найден
          schema:
            $ref: '#/definitions/Wallet'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/wallets/{walletID}/account':
    get:
      operationId: getWalletAccount
      summary: Получить состояние счёта
      tags:
        - Wallets
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/walletID'
      responses:
        '200':
          description: Счёт кошелька получен
          schema:
            $ref: '#/definitions/WalletAccount'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/wallets/{walletID}/grants':
    post:
      operationId: issueWalletGrant
      summary: Выдать право управления средствами
      tags:
        - Wallets
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/walletID'
        - name: request
          description: Запрос на право управления средствами на кошельке
          in: body
          required: true
          schema:
            $ref: '#/definitions/WalletGrantRequest'
      responses:
        '201':
          description: Единоразовое право выдано
          schema:
            $ref: '#/definitions/WalletGrantRequest'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          description: Неверные данные для выдачи
          schema:
            $ref: '#/definitions/InvalidOperationParameters'
  /withdrawals:
    get:
      operationId: listWithdrawals
      summary: Поиск выводов
      tags:
        - Withdrawals
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - name: walletID
          in: query
          description: Идентификатор кошелька
          type: string
          maxLength: 40
          minLength: 1
          required: false
        - name: identityID
          in: query
          description: Идентификатор личности владельца
          type: string
          maxLength: 40
          minLength: 1
          required: false
        - name: withdrawalID
          in: query
          description: Идентификатор вывода денежных средств
          type: string
          required: false
          maxLength: 40
          minLength: 1
        - name: destinationID
          in: query
          description: Идентификатор приёмника средств
          type: string
          maxLength: 40
          minLength: 1
          required: false
        - name: status
          in: query
          type: string
          enum:
            - Pending
            - Succeeded
            - Failed
          required: false
        - name: createdAtFrom
          in: query
          description: Дата создания с
          type: string
          format: date-time
          required: false
        - name: createdAtTo
          in: query
          description: Дата создания до
          type: string
          format: date-time
          required: false
        - $ref: '#/parameters/amountFrom'
        - $ref: '#/parameters/amountTo'
        - $ref: '#/parameters/currencyID'
        - $ref: '#/parameters/limit'
        - name: continuationToken
          in: query
          required: false
          description: |
            Токен, сигнализирующий о том, что в ответе передана только часть данных.
            Для получения следующей части нужно повторно обратиться к сервису, указав тот же набор условий и полученый токен.
            Если токена нет, получена последняя часть данных.
          type: string
      responses:
        '200':
          description: Результат поиска
          schema:
            type: object
            properties:
              continuationToken:
                description: |
                  Токен, сигнализирующий о том, что в ответе передана только часть данных.
                  Для получения следующей части нужно повторно обратиться к сервису, указав тот же набор условий и полученый токен.
                  Если токена нет, получена последняя часть данных.
                type: string
              result:
                description: Найденные выводы
                type: array
                items:
                  $ref: '#/definitions/Withdrawal'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
    post:
      operationId: createWithdrawal
      summary: Запустить вывод средств
      tags:
        - Withdrawals
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - name: withdrawal
          description: Данные вывода
          in: body
          required: true
          schema:
            $ref: '#/definitions/WithdrawalParameters'
      responses:
        '202':
          description: Вывод запущен
          headers:
            Location:
              description: URI запущенного вывода
              type: string
              format: uri
          schema:
            $ref: '#/definitions/Withdrawal'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '409':
          $ref: '#/responses/ConflictRequest'
        '422':
          description: Неверные данные для осуществления вывода
          schema:
            $ref: '#/definitions/InvalidOperationParameters'
  '/withdrawals/{withdrawalID}':
    get:
      operationId: getWithdrawal
      summary: Получить состояние вывода средств
      tags:
        - Withdrawals
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/withdrawalID'
      responses:
        '200':
          description: Вывод найден
          schema:
            $ref: '#/definitions/Withdrawal'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/withdrawals/{withdrawalID}/events':
    get:
      operationId: pollWithdrawalEvents
      summary: Запросить события вывода средств
      tags:
        - Withdrawals
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/withdrawalID'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/eventCursor'
      responses:
        '200':
          description: События найдены
          schema:
            type: array
            items:
              $ref: '#/definitions/WithdrawalEvent'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  '/withdrawals/{withdrawalID}/events/{eventID}':
    get:
      operationId: getWithdrawalEvents
      summary: Получить событие вывода средств
      tags:
        - Withdrawals
      parameters:
        - $ref: '#/parameters/requestID'
        - $ref: '#/parameters/deadline'
        - $ref: '#/parameters/withdrawalID'
        - $ref: '#/parameters/eventID'
      responses:
        '200':
          description: Событие найдено
          schema:
            $ref: '#/definitions/WithdrawalEvent'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
definitions:
  Asset:
    description: |
      Объём денежных средств
    type: object
    required:
      - amount
      - currency
    properties:
      amount:
        description: |
          Сумма денежных средств в минорных единицах, например, в копейках
        type: integer
        format: int64
        example: 1430000
      currency:
        description: |
          Валюта, символьный код согласно [ISO
          4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
        type: string
        pattern: '^[A-Z]{3}$'
        example: RUB
  BankCardDestinationResource:
    description: Банковская карта
    allOf:
      - $ref: '#/definitions/DestinationResource'
      - $ref: '#/definitions/SecuredBankCard'
  ContinuationToken:
    description: |
      Токен, сигнализирующий о том, что в ответе передана только часть данных.
      Для получения следующей части нужно повторно обратиться к сервису, указав тот же набор условий и полученый токен.
      Если токена нет, получена последняя часть данных.
    type: string
  Currency:
    description: Описание валюты
    type: object
    required:
      - id
      - numericCode
      - name
      - exponent
    properties:
      id:
        description: |
          Валюта, символьный код согласно [ISO
          4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
        type: string
        pattern: '^[A-Z]{3}$'
        example: RUB
      numericCode:
        description: |
          Цифровой код валюты согласно
          [ISO 4217](http://www.iso.org/iso/home/standards/currency_codes.htm)
        type: string
        pattern: '^[0-9]{3}$'
        example: '643'
      name:
        description: |
          Человекочитаемое название валюты
        type: string
        example: Российский рубль
      sign:
        description: |
          Знак единицы валюты
        type: string
        example: ₽
      exponent:
        description: |
          Количество допустимых знаков после запятой в сумме средств, в которых может
          указываться количество минорных денежных единиц
        type: integer
        minimum: 0
        example: 2
  CurrencyID:
    description: |
      Валюта, символьный код согласно [ISO
      4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
    type: string
    pattern: '^[A-Z]{3}$'
    example: RUB
  Deposit:
    description: Данные поступления денежных средств
    allOf:
      - type: object
        required:
          - wallet
          - source
          - body
        properties:
          id:
            description: Идентификатор поступления денежных средств
            type: string
            example: tZ0jUmlsV0
            readOnly: true
          createdAt:
            description: Дата и время запуска пополнения
            type: string
            format: date-time
            readOnly: true
          wallet:
            description: Идентификатор кошелька
            type: string
            example: '10068321'
          source:
            description: Идентификатор источника денежных средств
            type: string
            example: '107498'
          body:
            description: Объём поступивших средств
            type: object
            required:
              - amount
              - currency
            properties:
              amount:
                description: |
                  Сумма денежных средств в минорных единицах, например, в копейках
                type: integer
                format: int64
                example: 1430000
              currency:
                description: |
                  Валюта, символьный код согласно [ISO
                  4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
                type: string
                pattern: '^[A-Z]{3}$'
                example: RUB
          fee:
            description: Сумма коммисии
            type: object
            required:
              - amount
              - currency
            properties:
              amount:
                description: |
                  Сумма денежных средств в минорных единицах, например, в копейках
                type: integer
                format: int64
                example: 1430000
              currency:
                description: |
                  Валюта, символьный код согласно [ISO
                  4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
                type: string
                pattern: '^[A-Z]{3}$'
                example: RUB
          externalID:
            description: |
              Уникальный идентификатор сущности на вашей стороне.

              При указании будет использован для того, чтобы гарантировать идемпотентную обработку операции.
            type: string
            example: '10036274'
      - $ref: '#/definitions/DepositStatus'
  DepositFailure:
    type: object
    required:
      - code
    properties:
      code:
        description: Код ошибки поступления
        type: string
  DepositID:
    description: Идентификатор поступления денежных средств
    type: string
    example: tZ0jUmlsV0
  DepositStatus:
    type: object
    properties:
      status:
        description: |
          Статус поступления денежных средств.

          | Значение    | Пояснение                                        |
          | ----------- | ------------------------------------------------ |
          | `Pending`   | Поступление в процессе выполнения                |
          | `Succeeded` | Поступление средств произведён успешно           |
          | `Failed`    | Поступление средств завершился неудачей          |
        type: string
        enum:
          - Pending
          - Succeeded
          - Failed
        readOnly: true
      failure:
        description: |
          > Если `status` == `Failed`

          Пояснение причины неудачи
        readOnly: true
        type: object
        required:
          - code
        properties:
          code:
            description: Код ошибки поступления
            type: string
  Destination:
    description: Данные приёмника денежных средств
    allOf:
      - type: object
        required:
          - name
          - identity
          - currency
          - resource
        properties:
          id:
            description: Идентификатор приёмника денежных средств
            type: string
            example: '107498'
            readOnly: true
          name:
            description: |
              Человекочитаемое название приёмника средств, по которому его легко узнать
            type: string
            example: Squarey plastic thingy
          createdAt:
            description: Дата и время создания приёмника средств
            type: string
            format: date-time
            readOnly: true
          isBlocked:
            description: Заблокирован ли приёмник средств?
            type: boolean
            readOnly: true
            example: false
          identity:
            description: Идентификатор личности владельца кошелька
            type: string
            example: '10036274'
          currency:
            description: |
              Валюта, символьный код согласно [ISO
              4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
            type: string
            pattern: '^[A-Z]{3}$'
            example: RUB
          resource:
            $ref: '#/definitions/DestinationResource'
          metadata:
            description: |
              Произвольный, специфичный для клиента API и непрозрачный для системы набор данных, ассоциированных с
              данным приёмником
            type: object
            example:
              color_hint: olive-green
          externalID:
            description: |
              Уникальный идентификатор сущности на вашей стороне.

              При указании будет использован для того, чтобы гарантировать идемпотентную обработку операции.
            type: string
            example: '10036274'
      - $ref: '#/definitions/DestinationStatus'
  DestinationGrantRequest:
    description: Запрос на право управления выводами на приёмник средств
    type: object
    required:
      - validUntil
    properties:
      token:
        description: 'Токен, дающий право управления выводами'
        type: string
        minLength: 1
        maxLength: 4000
        example: |
          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5M
          DIyfQ.XbPfbIHMI6arZ3Y922BhjWgQzWXcXNrz0ogtVhfEd2o
        readOnly: true
      validUntil:
        description: |
          Дата и время, до наступления которого выданное право действительно
        type: string
        format: date-time
  DestinationID:
    description: Идентификатор приёмника денежных средств
    type: string
    example: '107498'
  DestinationResource:
    description: 'Ресурс приёмника денежных средств, используемый для осуществления выводов'
    type: object
    discriminator: type
    required:
      - type
    properties:
      type:
        description: |
          Тип ресурса приёмника средств.

          См. [RBKmoney Payment Resource API](?api/payres/swagger.yaml).
        type: string
        enum:
          - BankCardDestinationResource
  DestinationStatus:
    type: object
    properties:
      status:
        description: |
          Статус приёмника денежных средств.

          | Значение       | Пояснение                                  |
          | -------------- | ------------------------------------------ |
          | `Unauthorized` | Не авторизован владельцем на вывод средств |
          | `Authorized`   | Авторизован владельцем на вывод средств    |
        type: string
        enum:
          - Unauthorized
          - Authorized
        readOnly: true
        example: Authorized
      validUntil:
        description: |
          > Если `status` == `Authorized`

          Дата и время, до наступления которого авторизация действительна
        type: string
        format: date-time
        readOnly: true
  InvalidOperationParameters:
    description: Неверные входные данные для операции
    type: object
    properties:
      message:
        type: string
        example: |
          No such identity challenge type: fms.
  ExternalID:
    description: |
      Уникальный идентификатор сущности на вашей стороне.

      При указании будет использован для того, чтобы гарантировать идемпотентную обработку операции.
    type: string
    example: '10036274'
  FileDownload:
    type: object
    required:
      - url
      - expiresAt
    properties:
      url:
        description: URL файла
        type: string
      expiresAt:
        description: Время до которого ссылка будет считаться действительной
        type: string
        format: date-time
  GrantToken:
    type: string
    minLength: 1
    maxLength: 4000
    example: |
      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5M
      DIyfQ.XbPfbIHMI6arZ3Y922BhjWgQzWXcXNrz0ogtVhfEd2o
  Identity:
    description: Данные личности владельца кошельков
    type: object
    required:
      - name
      - provider
      - class
    properties:
      id:
        description: Идентификатор личности владельца кошелька
        type: string
        example: '10036274'
        readOnly: true
      name:
        description: |
          Человекочитаемое имя личности владельца, по которому его легко опознать
        type: string
        example: Keyn Fawkes
      createdAt:
        description: Дата и время создания личности владельца
        type: string
        format: date-time
        readOnly: true
      provider:
        description: Идентификатор провайдера услуг
        type: string
        example: ncoeps
      class:
        description: Класс личности владельцев
        type: string
        example: person
      level:
        description: Уровень идентификации личности
        type: string
        example: partial
        readOnly: true
      effectiveChallenge:
        description: |
          Идентификатор успешно пройденной процедура идентификации, результат которой действителен на
          текущий момент
        type: string
        example: '1'
        readOnly: true
      isBlocked:
        description: Заблокирована ли личность владельца?
        type: boolean
        readOnly: true
        example: false
      metadata:
        description: |
          Произвольный, специфичный для клиента API и непрозрачный для системы набор данных, ассоциированных с
          данной личностью владельца
        type: object
        example:
          lkDisplayName: Сергей Иванович
      externalID:
        description: |
          Уникальный идентификатор сущности на вашей стороне.

          При указании будет использован для того, чтобы гарантировать идемпотентную обработку операции.
        type: string
        example: '10036274'
  IdentityChallenge:
    description: Процедура идентификации личности
    allOf:
      - type: object
        required:
          - type
          - proofs
        properties:
          id:
            description: Идентификатор процедуры идентификации личности
            type: string
            example: '1'
            readOnly: true
          createdAt:
            description: Дата и время запуска процедуры
            type: string
            format: date-time
            readOnly: true
          type:
            description: Тип процедуры идентификации личности
            type: string
            example: esia
          proofs:
            description: |
              Набор представленных доказательств.

              См. [RBKmoney Private Documents API](?api/privdoc/swagger.json).
            type: array
            uniqueItems: true
            items:
              $ref: '#/definitions/SecuredPrivateDocument'
      - $ref: '#/definitions/IdentityChallengeStatus'
  IdentityChallengeEvent:
    description: |
      Событие, возникшее в процессе процедуры идентификации
    type: object
    required:
      - eventID
      - occuredAt
      - changes
    properties:
      eventID:
        description: Идентификатор события процедуры идентификации
        type: integer
        format: int32
        example: 42
      occuredAt:
        description: Дата и время возникновения события
        type: string
        format: date-time
      changes:
        type: array
        items:
          $ref: '#/definitions/IdentityChallengeEventChange'
  IdentityChallengeEventChange:
    description: |
      Изменение, возникшее в процессе процедуры идентификации
    type: object
    discriminator: type
    required:
      - type
    properties:
      type:
        description: Тип произошедшего изменения
        type: string
        enum:
          - IdentityChallengeStatusChanged
  IdentityChallengeID:
    description: Идентификатор процедуры идентификации личности
    type: string
    example: '1'
  IdentityChallengeStatus:
    type: object
    properties:
      status:
        description: |
          Статус процедуры идентификации личности.

          | Значение    | Пояснение                       |
          | ----------- | ------------------------------- |
          | `Pending`   | Процедура в процессе выполнения |
          | `Completed` | Процедура пройдена успешно      |
          | `Failed`    | Процедура не пройдена           |
          | `Cancelled` | Процедура отменена              |
        type: string
        enum:
          - Pending
          - Completed
          - Failed
          - Cancelled
        readOnly: true
      validUntil:
        description: |
          > Если `status` == `Completed`

          Дата и время, до наступления которого результат процедуры действителен
        type: string
        format: date-time
        readOnly: true
      failureReason:
        description: |
          > Если `status` == `Failed`

          Описание причины неудачного завершения процедуры
        type: string
        example: Proof incomplete
        readOnly: true
  IdentityChallengeStatusChanged:
    description: Изменение статуса процедуры идентификации
    allOf:
      - $ref: '#/definitions/IdentityChallengeEventChange'
      - $ref: '#/definitions/IdentityChallengeStatus'
  IdentityChallengeStatusValue:
    description: |
      Статус процедуры идентификации личности.

      | Значение    | Пояснение                       |
      | ----------- | ------------------------------- |
      | `Pending`   | Процедура в процессе выполнения |
      | `Completed` | Процедура пройдена успешно      |
      | `Failed`    | Процедура не пройдена           |
      | `Cancelled` | Процедура отменена              |
    type: string
    enum:
      - Pending
      - Completed
      - Failed
      - Cancelled
  IdentityChallengeType:
    description: Описание типа процедуры идентификации личности
    type: object
    properties:
      id:
        description: Тип процедуры идентификации личности
        type: string
        example: esia
      name:
        description: |
          Человекочитаемое название процедуры идентификации
        type: string
        example: Упрощённая идентификация
      requiredProofs:
        description: |
          Набор доказательств, которые необходимо предоставить
        type: array
        items:
          description: Тип документа
          type: string
          enum:
            - RUSDomesticPassport
            - RUSRetireeInsuranceCertificate
        example:
          - RUSDomesticPassport
          - RUSRetireeInsuranceCertificate
  IdentityChallengeTypeID:
    description: Тип процедуры идентификации личности
    type: string
    example: esia
  IdentityClass:
    type: object
    properties:
      id:
        description: Класс личности владельцев
        type: string
        example: person
      name:
        description: |
          Человекочитаемое название класса
        type: string
        example: Частное лицо
  IdentityClassID:
    description: Класс личности владельцев
    type: string
    example: person
  IdentityID:
    description: Идентификатор личности владельца кошелька
    type: string
    example: '10036274'
  IdentityLevel:
    type: object
    properties:
      id:
        description: Уровень идентификации личности
        type: string
        example: partial
      name:
        description: |
          Человекочитаемое название уровня идентификации
        type: string
        example: Частично идентифицирован
      challenges:
        description: |
          Список возможных процедур, которые необходимо пройти для достижения этого
          уровня
        type: array
        items:
          $ref: '#/definitions/IdentityChallengeType'
  IdentityLevelID:
    description: Уровень идентификации личности
    type: string
    example: partial
  BadRequest:
    type: object
    required:
      - errorType
    properties:
      errorType:
        description: Тип ошибки в данных
        type: string
        enum:
          - SchemaViolated
          - NotFound
          - WrongType
          - NotInRange
          - WrongSize
          - WrongLength
          - WrongArray
          - NoMatch
        example: NotFound
      name:
        description: 'Имя или идентификатор элемента сообщения, содержащего недопустимые данные'
        type: string
        example: X-Request-ID
      description:
        description: 'Пояснение, почему данные считаются недопустимыми'
        type: string
        example: Required parameter was not sent
  ConflictRequest:
    type: object
    properties:
      id:
        description: Идентификатор конфликтующей сущности
        type: string
        example: '12345151362762'
  BankCardPaymentSystem:
    description: Платежная система
    type: string
    enum:
      - visa
      - mastercard
      - visaelectron
      - maestro
      - amex
      - dinersclub
      - discover
      - unionpay
      - jcb
      - nspkmir
  SecuredBankCard:
    description: Безопасные данные банковской карты
    type: object
    required:
      - token
    properties:
      token:
        description: 'Токен, идентифицирующий исходные данные карты'
        type: string
        minLength: 1
        maxLength: 1000
        example: zu3TcwGI71Bpaaw2XkLWZXlhMdn4zpVzMQg9xMkh
      paymentSystem:
        description: Платежная система
        type: string
        enum:
          - visa
          - mastercard
          - visaelectron
          - maestro
          - amex
          - dinersclub
          - discover
          - unionpay
          - jcb
          - nspkmir
        readOnly: true
      bin:
        description: |
          [Идентификационный номер][1] банка-эмитента карты

          [1]: https://en.wikipedia.org/wiki/Payment_card_number#Issuer_identification_number_(IIN)
        type: string
        pattern: '^\d{6,8}$'
        example: '424242'
        readOnly: true
      lastDigits:
        description: Последние цифры номера карты
        type: string
        pattern: '^\d{2,4}$'
        example: '4242'
        readOnly: true
  RUSDomesticPassport:
    description: Открытые данные национального паспорта гражданина РФ
    allOf:
      - $ref: '#/definitions/SecuredPrivateDocument'
      - type: object
        properties:
          seriesMasked:
            description: Маскированная серия паспорта
            type: string
            example: 45**
            readOnly: true
          numberMasked:
            description: Маскированный номер паспорта
            type: string
            example: '*****6'
            readOnly: true
          fullnameMasked:
            description: Маскированное полное имя гражданина
            type: string
            example: И***** И.И.
            readOnly: true
  RUSRetireeInsuranceCertificate:
    description: |
      Открытые данные страхового свидетельства обязательного пенсионного страхования
      гражданина РФ
    allOf:
      - $ref: '#/definitions/SecuredPrivateDocument'
      - type: object
        properties:
          numberMasked:
            description: |
              Маскированный [СНИЛС](https://ru.wikipedia.org/wiki/Страховой_номер_индивидуального_лицевого_счёта)
            type: string
            example: 12*-***-*** *4
            readOnly: true
  SecuredPrivateDocument:
    description: |
      Персональный документ, токенизированный с целью сокрытия чувствительных данных
    type: object
    discriminator: type
    required:
      - token
    properties:
      type:
        description: Тип документа
        type: string
        enum:
          - RUSDomesticPassport
          - RUSRetireeInsuranceCertificate
        readOnly: true
      token:
        description: 'Токен, уникально идентифицирующий исходные данные'
        type: string
        example: 7kodCm5gr68ji4O11KpVn0
  SecuredPrivateDocumentType:
    description: Тип документа
    type: string
    enum:
      - RUSDomesticPassport
      - RUSRetireeInsuranceCertificate
  Provider:
    description: Данные провайдера услуг
    type: object
    required:
      - id
      - name
      - residences
    properties:
      id:
        description: Идентификатор провайдера услуг
        type: string
        example: ncoeps
      name:
        description: |
          Человекочитаемое наименование провайдера услуг
        type: string
        example: НКО «ЭПС»
      residences:
        type: array
        description: |
          Резиденции, в которых провайдер предоставляет услуги
        items:
          description: |
            Резиденция, символьный код по стандарту [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1)
          type: string
          pattern: '^[A-Z]{3}$'
          example: RUS
  ProviderID:
    description: Идентификатор провайдера услуг
    type: string
    example: ncoeps
  Report:
    type: object
    required:
      - id
      - createdAt
      - fromTime
      - toTime
      - status
      - type
      - files
    properties:
      id:
        description: Идентификатор отчета
        type: integer
        format: int64
      createdAt:
        description: Дата и время создания
        type: string
        format: date-time
      fromTime:
        description: Дата и время начала периода
        type: string
        format: date-time
      toTime:
        description: Дата и время конца периода
        type: string
        format: date-time
      status:
        description: Статус формирования отчета
        type: string
        enum:
          - pending
          - created
          - canceled
      type:
        description: Тип отчета
        type: string
        enum:
          - withdrawalRegistry
      files:
        type: array
        items:
          type: object
          required:
            - id
          properties:
            id:
              description: Идентификатор файла
              type: string
              maxLength: 40
              minLength: 1
  ReportParams:
    type: object
    required:
      - reportType
      - fromTime
      - toTime
    properties:
      reportType:
        description: Тип отчета
        type: string
        enum:
          - withdrawalRegistry
      fromTime:
        description: Начало временного отрезка
        type: string
        format: date-time
      toTime:
        description: Конец временного отрезка
        type: string
        format: date-time
  Residence:
    description: Описание региона резиденции
    type: object
    required:
      - id
      - name
    properties:
      id:
        description: |
          Резиденция, символьный код по стандарту [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1)
        type: string
        pattern: '^[A-Z]{3}$'
        example: RUS
      name:
        description: |
          Человекочитаемое название региона резиденции
        type: string
        example: Российская федерация
      flag:
        description: |
          Флаг региона резиденции
        type: string
        example: "\U0001F1F7\U0001F1FA"
  ResidenceID:
    description: |
      Резиденция, символьный код по стандарту [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1)
    type: string
    pattern: '^[A-Z]{3}$'
    example: RUS
  SourceID:
    description: Идентификатор источника денежных средств
    type: string
    example: '107498'
  Wallet:
    description: Данные кошелька
    type: object
    required:
      - name
      - identity
      - currency
    properties:
      id:
        description: Идентификатор кошелька
        type: string
        example: '10068321'
        readOnly: true
      name:
        description: 'Человекочитаемое название кошелька, по которому его легко узнать'
        type: string
        example: Worldwide PHP Awareness Initiative
      createdAt:
        description: Дата и время создания кошелька
        type: string
        format: date-time
        readOnly: true
      isBlocked:
        description: Заблокирован ли кошелёк?
        type: boolean
        readOnly: true
        example: false
      identity:
        description: Идентификатор личности владельца кошелька
        type: string
        example: '10036274'
      currency:
        description: |
          Валюта, символьный код согласно [ISO
          4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
        type: string
        pattern: '^[A-Z]{3}$'
        example: RUB
      metadata:
        description: |
          Произвольный, специфичный для клиента API и непрозрачный для системы набор данных, ассоциированных с
          данным кошельком
        type: object
        example:
          client_locale: RU_ru
      externalID:
        description: |
          Уникальный идентификатор сущности на вашей стороне.

          При указании будет использован для того, чтобы гарантировать идемпотентную обработку операции.
        type: string
        example: '10036274'
  WalletAccount:
    description: Состояние счёта кошелька
    type: object
    required:
      - own
      - available
    properties:
      own:
        description: |
          Собственные средства
        type: object
        required:
          - amount
          - currency
        properties:
          amount:
            description: |
              Сумма денежных средств в минорных единицах, например, в копейках
            type: integer
            format: int64
            example: 1430000
          currency:
            description: |
              Валюта, символьный код согласно [ISO
              4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
            type: string
            pattern: '^[A-Z]{3}$'
            example: RUB
      available:
        description: |
          Доступные к использованию средства, обычно равны собственным средствам
          за вычетом сумм всех незавершённых операций
        type: object
        required:
          - amount
          - currency
        properties:
          amount:
            description: |
              Сумма денежных средств в минорных единицах, например, в копейках
            type: integer
            format: int64
            example: 1430000
          currency:
            description: |
              Валюта, символьный код согласно [ISO
              4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
            type: string
            pattern: '^[A-Z]{3}$'
            example: RUB
        example:
          amount: 1200000
          currency: RUB
  WalletGrantRequest:
    description: Запрос на единоразовое право управления средствами на кошельке
    type: object
    required:
      - asset
      - validUntil
    properties:
      token:
        description: 'Токен, дающий право единоразового управления средствами на кошельке'
        type: string
        minLength: 1
        maxLength: 4000
        example: |
          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5M
          DIyfQ.XbPfbIHMI6arZ3Y922BhjWgQzWXcXNrz0ogtVhfEd2o
        readOnly: true
      asset:
        description: Допустимый к использованию объём средств
        type: object
        required:
          - amount
          - currency
        properties:
          amount:
            description: |
              Сумма денежных средств в минорных единицах, например, в копейках
            type: integer
            format: int64
            example: 1430000
          currency:
            description: |
              Валюта, символьный код согласно [ISO
              4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
            type: string
            pattern: '^[A-Z]{3}$'
            example: RUB
      validUntil:
        description: |
          Дата и время, до наступления которого выданное право действительно
        type: string
        format: date-time
  WalletID:
    description: Идентификатор кошелька
    type: string
    example: '10068321'
  WalletName:
    description: 'Человекочитаемое название кошелька, по которому его легко узнать'
    type: string
    example: Worldwide PHP Awareness Initiative
  Withdrawal:
    description: Данные вывода денежных средств
    allOf:
      - type: object
        required:
          - wallet
          - destination
          - body
        properties:
          id:
            description: Идентификатор вывода денежных средств
            type: string
            example: tZ0jUmlsV0
            readOnly: true
          createdAt:
            description: Дата и время запуска вывода
            type: string
            format: date-time
            readOnly: true
          wallet:
            description: Идентификатор кошелька
            type: string
            example: '10068321'
          destination:
            description: Идентификатор приёмника денежных средств
            type: string
            example: '107498'
          body:
            description: 'Объём средств, которые необходимо вывести'
            type: object
            required:
              - amount
              - currency
            properties:
              amount:
                description: |
                  Сумма денежных средств в минорных единицах, например, в копейках
                type: integer
                format: int64
                example: 1430000
              currency:
                description: |
                  Валюта, символьный код согласно [ISO
                  4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
                type: string
                pattern: '^[A-Z]{3}$'
                example: RUB
          fee:
            description: Сумма коммисии
            type: object
            required:
              - amount
              - currency
            properties:
              amount:
                description: |
                  Сумма денежных средств в минорных единицах, например, в копейках
                type: integer
                format: int64
                example: 1430000
              currency:
                description: |
                  Валюта, символьный код согласно [ISO
                  4217](http://www.iso.org/iso/home/standards/currency_codes.htm).
                type: string
                pattern: '^[A-Z]{3}$'
                example: RUB
          metadata:
            description: |
              Произвольный, специфичный для клиента API и непрозрачный для системы набор данных, ассоциированных с
              данным выводом
            type: object
            example:
              notify_email: iliketrains@example.com
          externalID:
            description: |
              Уникальный идентификатор сущности на вашей стороне.

              При указании будет использован для того, чтобы гарантировать идемпотентную обработку операции.
            type: string
            example: '10036274'
      - $ref: '#/definitions/WithdrawalStatus'
  WithdrawalEvent:
    description: |
      Событие, возникшее в процессе вывода средств
    type: object
    required:
      - eventID
      - occuredAt
      - changes
    properties:
      eventID:
        description: Идентификатор события вывода средств
        type: integer
        format: int32
        example: 42
      occuredAt:
        description: Дата и время возникновения события
        type: string
        format: date-time
      changes:
        type: array
        items:
          $ref: '#/definitions/WithdrawalEventChange'
  WithdrawalEventChange:
    description: |
      Изменение, возникшее в процессе вывода средств
    type: object
    discriminator: type
    required:
      - type
    properties:
      type:
        description: Тип произошедшего изменения
        type: string
        enum:
          - WithdrawalStatusChanged
  WithdrawalFailure:
    type: object
    required:
      - code
    properties:
      code:
        description: Код ошибки вывода
        type: string
  WithdrawalID:
    description: Идентификатор вывода денежных средств
    type: string
    example: tZ0jUmlsV0
  WithdrawalParameters:
    description: Параметры создаваемого вывода
    allOf:
      - $ref: '#/definitions/Withdrawal'
      - type: object
        properties:
          walletGrant:
            type: string
            minLength: 1
            maxLength: 4000
            example: |
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5M
              DIyfQ.XbPfbIHMI6arZ3Y922BhjWgQzWXcXNrz0ogtVhfEd2o
            description: |
              Токен, дающий право на списание с кошелька для оплаты вывода.

              Необходимо предоставить в том случае, если оплата производится засчёт средств _чужого_
              кошелька. Владелец указанного кошелька может
              [выдать на это право](#operation/issueWalletGrant).
          destinationGrant:
            type: string
            minLength: 1
            maxLength: 4000
            example: |
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5M
              DIyfQ.XbPfbIHMI6arZ3Y922BhjWgQzWXcXNrz0ogtVhfEd2o
            description: |
              Токен, дающий право вывода.

              Необходимо предоставить в том случае, если вывод производится посредством _чужого_ приёмника
              средств. Владелец указанного приёмника может
              [выдать на это право](#operation/issueDestinationGrant).
  WithdrawalStatus:
    type: object
    properties:
      status:
        description: |
          Статус вывода денежных средств.

          | Значение    | Пояснение                                  |
          | ----------- | ------------------------------------------ |
          | `Pending`   | Вывод в процессе выполнения                |
          | `Succeeded` | Вывод средств произведён успешно           |
          | `Failed`    | Вывод средств завершился неудачей          |
        type: string
        enum:
          - Pending
          - Succeeded
          - Failed
        readOnly: true
      failure:
        description: |
          > Если `status` == `Failed`

          Пояснение причины неудачи
        readOnly: true
        type: object
        required:
          - code
        properties:
          code:
            description: Код ошибки вывода
            type: string
  WithdrawalStatusChanged:
    description: Изменение статуса вывода средств
    allOf:
      - $ref: '#/definitions/WithdrawalEventChange'
      - $ref: '#/definitions/WithdrawalStatus'
